{"version":3,"sources":["assets/logo.png","components/nav/nav.js","store/type.js","store/action/detailsActon.js","utils/method.js","components/details/showHeader.js","components/details/overview.js","components/details/reviews.js","pages/movie_details.js","pages/tv_details.js","components/home/showSection.js","components/home/trending.js","store/action/trendingAction.js","pages/home.js","App.js","store/action/genreAction.js","reportWebVitals.js","store/reducer/genreReducer.js","store/reducer/trendingReducer.js","store/reducer/detailReducer.js","store/reducer/rootReducer.js","store.js","index.js"],"names":["Nav","menuRef","useRef","tvRef","movieRef","toggleMenu","current","classList","toggle","toggleDropDown","ref","id","className","onClick","to","src","logo","type","SET_TRENDING","SET_DETAILS","SET_DETAILS_EMPTY","SET_GENRES","setDetailsAction","movie_type","dispatch","a","axios","get","request","data","reviewRequest","videoRequest","reviews","results","videos","console","log","setEmptyDetailAction","colors","getRandomColor","randomNumber","length","num","Math","ceil","random","ShowHeader","props","details","backdrop_path","poster_path","title","name","tagline","genres","map","genre","style","backgroundColor","vote_average","Overview","useState","trailerIndex","setTrailerIndex","updateTrailerIndex","showSeason","e","target","nextSibling","overview","color","key","seasons","season","index","Array","from","episode_count","keys","n","i","Reviews","review","author","moment","created_at","format","content","MovieDetails","useSelector","state","useDispatch","useParams","useEffect","Object","TVDetails","ShowSection","mediaType","shows","setShows","getShow","toLowerCase","replace","show","original_name","connect","trendings","getTrendingDispatch","dayMode","trendingRequest","filter","media_type","dataPromises","Promise","all","responses","dataResults","response","trailer","undefined","genre_ids","genreId","findIndex","getTrendingAction","showNum","setShowNum","timeOut","setTimeOut","prevShowNum","usePrevious","throttleTime","setThrottleTime","throttleTime2","setThrottleTime2","setDayMode","prevDayMode","setTimeout","forEach","timeId","clearTimeout","showInfo","document","querySelectorAll","showPoster","element","transition","remove","add","transform","changeShow","val","time","Date","getTime","prevState","checked","onChange","htmlFor","href","popcornTime","localStorage","getItem","JSON","parse","includes","alert","setItem","stringify","Set","saveFromFavorites","vote_count","first_air_date","release_date","Home","getGenreDispatch","movieGenre","tvGenre","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initState","genreReducer","action","trendingReducer","detailReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92556e3f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.9dd90d35.png\";","import React, {useRef} from 'react';\r\nimport '../../styles/nav/nav.scss'\r\nimport logo from '../../assets/logo.png'\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    const menuRef = useRef();\r\n    const tvRef = useRef();\r\n    const movieRef = useRef();\r\n    const toggleMenu = () => {\r\n        menuRef.current.classList.toggle('menuOpen');\r\n\r\n    }\r\n\r\n    const toggleDropDown = (ref) => {\r\n        ref.current.classList.toggle('openDropDownMenu')\r\n\r\n    }\r\n    return (\r\n        <header>\r\n            <div id='nav'>\r\n                <i className='fa fa-bars' onClick={toggleMenu}></i>\r\n                <Link to='/'><img src={logo} /></Link>\r\n                <ul id='menu' ref={menuRef}>\r\n                    <i className='fa fa-close' onClick={toggleMenu}></i>\r\n                    <li>\r\n                        <h2 onClick={() => toggleDropDown(movieRef)}>Movies</h2>\r\n                        <ul className='dropdownMenus' ref={movieRef} onClick={toggleMenu}>\r\n                            <li>Popular</li>\r\n                            <li>Popular</li>\r\n                            <li>Popular</li>\r\n                            <li>Popular</li>\r\n\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li>\r\n                        <h2 onClick={() => toggleDropDown(tvRef)}>TV</h2>\r\n                        <ul className='dropdownMenus' ref={tvRef} onClick={toggleMenu}>\r\n                            <li>Popular</li>\r\n\r\n                        </ul>\r\n                    </li>\r\n\r\n                    <li><h2>Advance Search</h2></li>\r\n                </ul>\r\n\r\n                <input type='search' />\r\n            </div>\r\n\r\n            \r\n            \r\n            \r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","export const SET_TRENDING = 'SET_TRENDING';\r\nexport const SET_DETAILS = 'SET_DETAILS';\r\nexport const SET_DETAILS_EMPTY = 'SET_DETAILS_EMPTY';\r\nexport const SET_GENRES = 'SET_GENERES'","import axios from \"axios\"\r\nimport { SET_DETAILS, SET_DETAILS_EMPTY } from \"../type\";\r\n\r\nexport const setDetailsAction = (id, movie_type) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const request = await axios.get(`https://api.themoviedb.org/3/${movie_type}/${id}?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US`);\r\n            const data = request.data;\r\n            const reviewRequest = await axios.get(`https://api.themoviedb.org/3/${movie_type}/${id}/reviews?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US&page=1`);\r\n            const videoRequest = await axios.get(`https://api.themoviedb.org/3/${movie_type}/${id}/videos?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US`);\r\n            data.reviews = reviewRequest.data.results;\r\n            data.videos = videoRequest.data.results;\r\n            console.log(data)\r\n            dispatch({\r\n                type: SET_DETAILS,\r\n                data\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const setEmptyDetailAction = () => {\r\n    return {\r\n        type : SET_DETAILS_EMPTY,\r\n    }\r\n}","const colors = ['#62bccc', '#337ac0', '#ee9323', '#F2b922'];\r\n\r\nexport const getRandomColor = () => colors[randomNumber(colors.length - 1)]\r\n\r\nexport const randomNumber = (num) => {\r\n    return Math.ceil(Math.random() * num);\r\n\r\n}\r\nexport const saveFromFavorites = (id) => {\r\n    const popcornTime = localStorage.getItem('popcornTime');\r\n    if(!popcornTime){\r\n        localStorage.setItem('popcornTime', JSON.stringify([id]));\r\n        alert('successfully added to favorites')\r\n\r\n    }else{\r\n        const popcorTimeData = JSON.parse(popcornTime);\r\n        if(popcorTimeData.includes(id)){\r\n            alert('already added in favorites');\r\n        }else{\r\n            localStorage.setItem('popcornTime', JSON.stringify([...new Set([...JSON.parse(popcornTime), id])]));\r\n            alert('successfully added to favorites');\r\n\r\n        }\r\n        \r\n    }\r\n        \r\n}","import React from 'react'\r\nimport { getRandomColor } from '../../utils/method';\r\n\r\nconst ShowHeader = (props) => {\r\n    const {\r\n        details\r\n    } = props;\r\n    console.log(details);\r\n    return (\r\n        <section id='detailHeader'>\r\n            <img className='backgroundImg' src={`http://image.tmdb.org/t/p/w1280/${details.backdrop_path}`} />\r\n            <div className='background'></div>\r\n            <div className='showTitle'>\r\n                <img src={`http://image.tmdb.org/t/p/w500/${details.poster_path}`} />\r\n                <h1>{details.title || details.name}</h1>\r\n                <p className='tagline'>{details.tagline}</p>\r\n                <ul>\r\n                    {details.genres.map(genre => (\r\n                        <li style={{backgroundColor : getRandomColor()}}>{genre.name}</li>\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <div className='headerInfo'>             \r\n                <div className='rating'>\r\n                    <i className='fa fa-star'></i>\r\n                    <p>{details.vote_average}/10</p>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default ShowHeader\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Overview = (props) => {\r\n    const {\r\n        details\r\n    } = props;\r\n\r\n    const [trailerIndex, setTrailerIndex] = useState(0);\r\n\r\n    const updateTrailerIndex = (num) => {\r\n        if(trailerIndex + num > details.videos.length - 1){\r\n            setTrailerIndex(details.videos.length - 1)\r\n        }else if(trailerIndex + num < 0){\r\n            setTrailerIndex(0)\r\n        }else{\r\n            setTrailerIndex(trailerIndex + num)\r\n        }\r\n    }\r\n\r\n    const showSeason = (e) => {\r\n        e.target.nextSibling.classList.toggle('showEpisodeList');\r\n    }\r\n    return (\r\n            <div className='overview'>\r\n                <div className='addFav' >\r\n                    <i className='fa fa-heart'></i>\r\n                    <p>Add To Favorites</p>\r\n                </div>\r\n                <div className='synopsis'>\r\n                    <h3>Synopsis</h3>      \r\n                    <p>{details.overview}</p>\r\n                </div>\r\n                { details.videos.length > 0 && (\r\n                    <section id='trailers'>\r\n                        <div className='video'>\r\n                            <i className='fa fa-arrow-left' \r\n                                onClick={() => updateTrailerIndex(-1)}\r\n                                style={{color : trailerIndex ===  0 ? '#44615e' : '#16bbac'}}\r\n                            ></i>\r\n                            <i className='fa fa-arrow-right' \r\n                                onClick={() => updateTrailerIndex(1)}\r\n                                style={{color : trailerIndex ===  details.videos.length - 1 ? '#44615e' : '#16bbac'}}\r\n                            ></i>\r\n                            <iframe src={`https://www.youtube.com/embed/${details.videos[trailerIndex].key}`}></iframe>\r\n                        </div>\r\n                    </section>\r\n\r\n                ) }\r\n                {/* <section id='photos'>\r\n                    <div className='photoViewer'>\r\n                    </div>\r\n                    <ul className='photosList'>\r\n                    </ul>\r\n                </section> */}\r\n                <section className='seasonSection'>\r\n                    <ul className='seasonList'>\r\n                        {details.seasons && details.seasons.map((season, index) => (\r\n                            <li className='season'>\r\n                                <div className='seasonNum' onClick={showSeason}>Season {index + 1}</div>\r\n                                <ul className='episodeList'>\r\n                                    {Array.from(Array(season.episode_count).keys()).map((n, i) => (\r\n                                        <Link><li>Episode {i + 1}</li></Link>\r\n                                    ))}\r\n                                </ul>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </section>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Overview\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\nconst Reviews = (props) => {\r\n    const {\r\n        details\r\n\r\n    } = props\r\n    console.log(details.reviews);\r\n    return (\r\n        <div className='reviews'>\r\n            <h2>Reviews</h2>\r\n            <div className='reviewContainer'>\r\n                { details.reviews.map(review => (\r\n                    <div className='review'>\r\n                        <h3>{review.author}</h3>\r\n                        <p className='date'>{moment(review.created_at).format('MMMM Do YYYY')}</p>\r\n                        <p>{review.content}</p>\r\n                    </div>\r\n\r\n                )) }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews\r\n","import React, {useEffect} from 'react';\r\nimport '../styles/details/details.scss';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setDetailsAction, setEmptyDetailAction } from '../store/action/detailsActon';\r\nimport ShowHeader from '../components/details/showHeader';\r\nimport Overview from '../components/details/overview';\r\nimport Reviews from '../components/details/reviews';\r\n\r\nconst MovieDetails = (props) => {\r\n\r\n    const details = useSelector(state => state.details);\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        (async() => {\r\n            try{\r\n                await dispatch(setDetailsAction(id, 'movie'));\r\n            }catch(e){\r\n            }\r\n        })()\r\n\r\n        return () => {\r\n            dispatch(setEmptyDetailAction())\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id='details'>\r\n            {Object.keys(details).length > 0 && (\r\n                <>\r\n                    <ShowHeader details={ details }/>\r\n                    <section id='overview_reviews'>\r\n                        <Overview details= {details} />\r\n                        <Reviews details= {details} />\r\n                    </section>\r\n                    \r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieDetails\r\n","import React, {useEffect} from 'react';\r\nimport '../styles/details/details.scss';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { setDetailsAction } from '../store/action/detailsActon';\r\nimport ShowHeader from '../components/details/showHeader';\r\nimport Overview from '../components/details/overview';\r\nimport Reviews from '../components/details/reviews';\r\nimport { setEmptyDetailAction } from '../store/action/detailsActon';\r\n\r\nconst TVDetails = (props) => {\r\n    const details = useSelector(state => state.details);\r\n    const dispatch = useDispatch()\r\n    const {id} = useParams();\r\n    useEffect(() => {\r\n        (async() => {\r\n            try{\r\n                await dispatch(setDetailsAction(id, 'tv'));\r\n            }catch(e){\r\n            }\r\n        })();\r\n\r\n        return () => {\r\n            dispatch(setEmptyDetailAction());\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div id='details'>\r\n            {Object.keys(details).length > 0 && (\r\n                <>\r\n                    <ShowHeader details = {details}/>\r\n                    <section id='overview_reviews'>\r\n                        <Overview details= {details} />\r\n                        <Reviews details= {details} />\r\n                    </section>\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TVDetails;\r\n","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nconst ShowSection = (props) => {\r\n    const {\r\n        type,\r\n        mediaType\r\n    } = props;\r\n\r\n    const [shows, setShows] = useState([]);\r\n\r\n    const getShow = async() => {\r\n        try {\r\n            const show = await axios.get(`https://api.themoviedb.org/3/${mediaType}/${type.toLowerCase().replace(/[\\s]+/g, '_')}?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US&page=1`);\r\n            setShows(show.data.results);\r\n        } catch (error) {\r\n            console.log(error)\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getShow();\r\n\r\n    }, [mediaType]);\r\n\r\n\r\n    return (\r\n        <section className='showSections'>\r\n            <div className='headerShowSection'>\r\n                <h1>{type} {mediaType}</h1>\r\n            </div>\r\n            <div className='previewShowList'>\r\n                {shows.map(show => (\r\n                    <div className='show' key={show.id}>\r\n                        <Link to={`/${mediaType}/details/${show.id}`} className='imageContainer'>\r\n                            <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} />\r\n                            {/* <p>No Image</p> */}\r\n                        </Link>\r\n                        <div className='showShortDetails'>\r\n                            <div className='ratings'>\r\n                                <i className='fa fa-star'></i>\r\n                                <p>{show.vote_average} / 10</p>\r\n                            </div>\r\n                            <h4>{show.title || show.original_name}</h4>\r\n                            <Link to={`/${mediaType}/details/${show.id}`}>\r\n                                <button>More Details</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))}\r\n                \r\n\r\n            </div>\r\n            \r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowSection\r\n","import React, { useEffect, useState} from 'react';\r\nimport {usePrevious} from 'react-use';\r\nimport { getRandomColor, saveFromFavorites } from '../../utils/method';\r\nimport { connect } from 'react-redux';\r\nimport { getTrendingAction } from '../../store/action/trendingAction';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Trending = (props) => {\r\n\r\n    const {\r\n        getTrendingDispatch,\r\n        trendings,\r\n        genres,\r\n\r\n    } = props;\r\n\r\n    const [showNum, setShowNum] = useState(-1);\r\n    const [timeOut, setTimeOut] = useState([]);\r\n    const prevShowNum = usePrevious(showNum);\r\n    const [throttleTime, setThrottleTime] = useState(0);\r\n    const [throttleTime2, setThrottleTime2] = useState(0);\r\n    const [dayMode, setDayMode] = useState('day');\r\n    const prevDayMode = usePrevious(dayMode)\r\n\r\n    \r\n\r\n    const setShowNumTimeout = () => {\r\n        timeOut.forEach(timeId => {\r\n            clearTimeout(timeId);\r\n        })\r\n        setTimeOut([...timeOut, setTimeout(() => {            \r\n            setShowNum(showNum >= trendings.length - 1 ? 0 : showNum + 1);\r\n        }, 5000)])\r\n        \r\n    }\r\n    useEffect(() => {\r\n        (async() => {\r\n            await getTrendingDispatch(dayMode, genres);\r\n            setTimeOut([setTimeout(() => {            \r\n                setShowNum(0);\r\n            }, 100)]);\r\n\r\n        })();\r\n        return () => {\r\n            timeOut.forEach(timeId => {\r\n                clearTimeout(timeId);\r\n            })\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {    \r\n        if(prevDayMode !== undefined){\r\n            (async() => {\r\n                await getTrendingDispatch(dayMode, genres);\r\n                setTimeOut([...timeOut, setTimeout(() => {            \r\n                    setShowNum(0);\r\n                })]);\r\n            })()\r\n        }\r\n    }, [dayMode]);\r\n\r\n    const showInfo = document.querySelectorAll('#trending .showInfo');\r\n    const showPoster = document.querySelectorAll('#trending .poster')\r\n\r\n    useEffect(() => {\r\n        showInfo.forEach((element, i) => {\r\n            //when the slidesho comes back from the start, the last show's transition would be none to fixed animation error\r\n            if(showNum === 0){\r\n                if(i === trendings.length - 1){\r\n                    element.style.transition = '0s';\r\n                }   \r\n            //when user clicks previous button and reaches the end of the show, the transition of both first and last show would be none\r\n            }else if(prevShowNum === 0 && showNum === trendings.length - 1){\r\n                element.style.transition = '0s';\r\n\r\n            }else{\r\n                element.style.transition = '.5s';\r\n            }\r\n            //if the current show is being viewed, the opacitiy would be 1\r\n            if(showNum === i){\r\n                element.classList.remove('hideInfo');\r\n            //this is to hide the elements for moving \r\n            }else{\r\n                element.classList.add('hideInfo');\r\n            }\r\n            if(i <= showNum - 2){\r\n                element.style.transform = `translateX(${100 * (showNum - 1) }%)`;\r\n            }else{    \r\n                element.style.transform = `translateX(${-100 * (showNum) }%)`;\r\n            }\r\n        });\r\n\r\n        showPoster.forEach((element, i) => {\r\n            if(showNum === 0){\r\n                if(i === trendings.length - 1){\r\n                    element.style.transition = '0s';\r\n                }   \r\n            //when user clicks previous button and reaches the end of the show, the transition of both first and last show would be none\r\n            }else if(prevShowNum === 0 && showNum === trendings.length - 1){\r\n                element.style.transition = '0s';\r\n\r\n            }else{\r\n                element.style.transition = '.5s';\r\n            }\r\n\r\n\r\n            //if the current show is being viewed, the opacitiy would be 1\r\n            if(showNum === i){\r\n                element.classList.remove('hidePoster');\r\n            //this is to hide the elements for moving \r\n            }else{\r\n                element.classList.add('hidePoster');\r\n            }\r\n            if(i <= showNum - 2){\r\n                element.style.transform = `translateY(${100 * (showNum - 1) }%)`;\r\n            }else{    \r\n                element.style.transform = `translateY(${-100 * (showNum) }%)`;\r\n            }\r\n\r\n        })\r\n        // console.log(prevShowNum !== undefined)\r\n        if(prevShowNum !== undefined){\r\n            setShowNumTimeout();\r\n\r\n        }\r\n \r\n        \r\n    }, [showNum]);\r\n\r\n    const changeShow = (val) => {\r\n        const time = new Date().getTime();\r\n        if(time > throttleTime ){\r\n            setThrottleTime(time + 500);\r\n            timeOut.forEach(timeId => {\r\n                clearTimeout(timeId);\r\n            })\r\n            \r\n            val = showNum + val\r\n            setShowNum((prevState) => {\r\n                if(val < prevState){\r\n                    if(val <= -1){\r\n                        return trendings.length - 1\r\n                    }\r\n                }\r\n                return val >= trendings.length ? 0 : val;\r\n            });\r\n        }\r\n    }\r\n\r\n    const dayModeChange = (e) =>{\r\n        const val = e.target.checked\r\n        const time = new Date().getTime();\r\n        if(time > throttleTime2 ){\r\n            setThrottleTime2(time + 1000);\r\n            [...showInfo, ...showPoster].forEach(element => {\r\n                element.style.transition = '0.5s';\r\n            })\r\n            setDayMode(val ? 'week' : 'day')\r\n        }\r\n    }\r\n    return (\r\n        <div id='trending'>\r\n            <div className='containerOpacity'></div>      \r\n            <section className='trendingContainer'> \r\n                <input checked={dayMode === 'day' ? false : true} onChange={dayModeChange} type='checkbox' id='media_type' name='media_type'/>\r\n                <label htmlFor='media_type'>   \r\n                    <p className='daySwitch'>Day</p>\r\n                    <p className='weekSwitch'>Week</p>\r\n                    <div className='circle'>\r\n                    </div>\r\n                </label>\r\n                <i className='slideBtn fa fa-arrow-circle-left' onClick={() => changeShow(-1)}></i>\r\n                <div className='showinfoContainer'>\r\n                    {trendings.map((show, i) => (\r\n                        <div key={i} className='showInfo'>\r\n                            <ul className='genres'>\r\n                                {show.genres && show.genres.map(genre => \r\n                                    <li style={{backgroundColor : getRandomColor()}}>{genre}</li>\r\n                                )}\r\n                            </ul>\r\n                            <h1>{show.name || show.title}</h1>\r\n                            <ul className='buttons'>\r\n                                {show.trailer && (\r\n                                    <a href={show.trailer} target='_blank'><li>\r\n                                        <i className='fa fa-play'></i>\r\n                                        <p>Watch trailer</p>\r\n                                    </li></a>\r\n                                )}\r\n                                <li onClick={() => saveFromFavorites(show.id)}>\r\n                                    <i className='fa fa-heart'></i>\r\n                                    <p>Add To Favorites</p>\r\n                                </li>\r\n                            </ul>\r\n\r\n                            <ul className='shortInfo'>\r\n                                <li className='rating'>{show.vote_average}/10</li>\r\n                                <li>Vote Count: {show.vote_count}</li>\r\n                                <li>{show.media_type === 'tv' ? `First Air: ${show.first_air_date}` : `Release Date: ${show.release_date}`}</li>\r\n                            </ul>\r\n                            <Link to={`/${show.media_type}/details/${show.id}`} className='moreDetails'>More Details</Link>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className='showPosterContainer'>\r\n                    {trendings.map(show => (\r\n                        <div className='poster'>\r\n                            <img src={`http://image.tmdb.org/t/p/w500/${show.poster_path}`} />\r\n                        </div>  \r\n                    ))}\r\n                </div>\r\n                <i className='slideBtn fa fa-arrow-circle-right' onClick={() => changeShow(1)}></i>\r\n            </section>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        trendings : state.trendings,\r\n        genres : state.genres,\r\n    }\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTrendingDispatch : (dayMode, genres) => dispatch(getTrendingAction(dayMode, genres))\r\n    }\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Trending)\r\n","import axios from \"axios\";\r\nimport { SET_TRENDING } from \"../type\";\r\nexport const getTrendingAction = (dayMode, genres) => {\r\n    return async(dispatch)=> {\r\n        try {\r\n            const trendingRequest = await axios.get(`https://api.themoviedb.org/3/trending/all/${dayMode}?api_key=2effcb37ac7b1550616d653eea9cb4d6`);\r\n            let data = trendingRequest.data.results.filter(data => data.media_type !== 'person');\r\n            const dataPromises = data.map(show => axios.get(`https://api.themoviedb.org/3/${show.media_type}/${show.id}/videos?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US`));\r\n            const responses = await Promise.all(dataPromises);\r\n            const dataResults = responses.map((response, index) => {\r\n                const show = data[index];\r\n                const trailer = response.data.results[0];\r\n                if(trailer !== undefined){\r\n                    show.trailer = `https://www.youtube.com/watch?v=${trailer.key}`\r\n                }\r\n                show.genres = show.genre_ids.map(genreId => genres[genres.findIndex(genre => genre.id === genreId)].name)\r\n                return show; \r\n                \r\n            });\r\n            dispatch({\r\n                type : SET_TRENDING,\r\n                data : dataResults\r\n            });\r\n            return\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n        \r\n    }\r\n}","import React from 'react'\r\nimport ShowSection from '../components/home/showSection';\r\nimport Trending from '../components/home/trending';\r\nimport '../styles/home/home.scss';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div id='homePage'>\r\n            <Trending />\r\n            <ShowSection type='Upcoming' mediaType='movie'/>\r\n            <ShowSection type='Now Playing' mediaType='movie'/>\r\n            <ShowSection type='Airing Today' mediaType='tv'/>\r\n            <ShowSection type='On The Air' mediaType='tv'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { HashRouter, Route, Switch } from \"react-router-dom\"\nimport Nav from \"./components/nav/nav\"\nimport MovieDetails from \"./pages/movie_details\"\nimport TVDetails from \"./pages/tv_details\"\nimport Home from \"./pages/home\"\nimport './styles/app.scss'\nimport { connect } from \"react-redux\"\nimport { getGenreAction } from \"./store/action/genreAction\"\nimport { useEffect } from \"react\"\nconst App = (props) => {\n  const {\n    getGenreDispatch,\n    genres\n\n  } = props;\n\n  useEffect(() => {\n    getGenreDispatch();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {genres.length > 0 && (\n        <HashRouter>\n          <Nav />\n          <Switch>\n            <Route exact path='/' component={Home} />\n            <Route path='/movie/details/:id' component={MovieDetails} />\n            <Route path='/tv/details/:id' component={TVDetails} />\n          </Switch>\n        </HashRouter>\n\n      )}\n      \n      \n      <footer>\n        <div className='containerOpacity'></div>\n      </footer>\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    genres : state.genres,\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    getGenreDispatch : () => dispatch(getGenreAction()),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import axios from 'axios';\r\nimport { SET_GENRES } from '../type';\r\n\r\nexport const getGenreAction = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            let genres = [];\r\n            const movieGenre = await axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US`);\r\n            const tvGenre = await axios.get(`https://api.themoviedb.org/3/genre/tv/list?api_key=2effcb37ac7b1550616d653eea9cb4d6&language=en-US`);\r\n            genres = [...movieGenre.data.genres, ...tvGenre.data.genres];\r\n            dispatch({\r\n                type : SET_GENRES,\r\n                data : genres,\r\n            })\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n            \r\n        }\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { SET_GENRES } from \"../type\";\r\n\r\nconst initState = [];\r\n\r\nconst genreReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case SET_GENRES:\r\n            return action.data;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default genreReducer","import { SET_TRENDING } from \"../type\";\r\n\r\nconst initState = [];\r\n\r\nconst trendingReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case SET_TRENDING:\r\n            return action.data\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default trendingReducer","import { SET_DETAILS, SET_DETAILS_EMPTY } from \"../type\";\r\n\r\nconst initState = {};\r\n\r\nconst detailReducer = (state = initState, action) => {\r\n    switch(action.type){\r\n        case SET_DETAILS:\r\n            return action.data;\r\n        case SET_DETAILS_EMPTY:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default detailReducer;\r\n","import { combineReducers } from \"redux\"\r\nimport genreReducer from \"./genreReducer\"\r\nimport trendingReducer from \"./trendingReducer\"\r\nimport detailReducer from \"./detailReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n    trendings : trendingReducer,\r\n    genres : genreReducer,\r\n    details : detailReducer,\r\n\r\n})\r\nexport default rootReducer","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./store/reducer/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}